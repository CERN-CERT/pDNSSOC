## match tag=debug.** and dump to console
<match debug.**>
  @type stdout
  @id output_stdout
</match>

# Getting DNS queries via TCP
# The data coming in BIND logs using syslog format
<source>
  @type tcp 
  port 5141
  tag tcp
  <parse>
	@type regexp
	expression /(?<date>.*) client \@.* (?<client>.*)#.*: query: (?<query>\S+) .*/
  </parse>
  delimiter "\n" # optional. "\n" (newline) by default
</source>

# Getting DNS queries from syslog
<source>
  @type syslog
  port 5140
  protocol_type tcp
  tag system
</source>

# Parsing DNS queries from syslog
<filter tcp.**>
  @type parser
  key_name message
  <parse>
    @type regexp
    expression /(?<date>.*) client \@.* (?<client>.*)#.*: query: (?<query>\S+) .*/
  </parse>
#re-tag to tcp.**
</filter>

# Parsing DNS queries from our custom logger
<match deb*.**>
 @type file
  path /var/log/td-agent/queries-%Y%m%d-%H%M
  <format>
    @type json
  </format>
</match>

# Correlated the data flow with malicious domains from MISP
<filter tcp.**>
  @type filter_list
  filter AC
  key_to_filter query
  pattern_file_paths ["/etc/td-agent/misp_domains.txt"]
  filter_empty true
  action whitelist
</filter>

# Writing pDNSSOC alerts to buffered file
<match tcp.**>
 @type file
  path /var/log/td-agent/pdnssoc-alerts/pdnssoc-%Y%m%d-%H%M
  <format>
    @type json
  </format>
  <buffer>
    timekey 2m
    timekey_use_utc true
    timekey_wait 1m
  </buffer>
</match>

